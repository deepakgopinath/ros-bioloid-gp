<!-- -->
<launch>
  <param name="robot_name" value="bioloid_robot"/>
  <!-- <param name="robot_description_path" value="$(find bioloid_moveit_gp4)"/> -->

  <arg name="sim" default="true"/>
  <arg name="sim_env" default="default"/>

  <!-- V-REP -->
  <include if="$(arg sim)" file="$(find bioloid_hardware)/launch/sim_vrep.launch">
    <arg name="sim_environment" value="$(arg sim_env)"/>
  </include>

  <!-- fake perception -->
  <!-- <include if="$(arg sim)" file="$(find bioloid_perception)/launch/fake_perception.launch">
  </include> -->
  
   <!-- moveit_vrep_interface    -->
  <node if="$(arg sim)" name="moveit_vrep_interface" pkg="bioloid_hardware" type="vrep_interface" />  

  <!-- end-effector tf
  <node pkg="tf"
        type="static_transform_publisher"
        name="left_eef_tf"
        args="0 0.109 0 0 0 0 1 LWrist_Roll left_end_effect_point 10" />
  <node pkg="tf"
        type="static_transform_publisher"
        name="right_eef_tf"
        args="0 -0.109 0 0 0 0 1 RWrist_Roll right_end_effect_point 10" />
	-->    
        




        
  <!-- specify the planning pipeline -->
  <arg name="pipeline" default="ompl" />

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find bioloid_moveit_gp4)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="use_gui" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find bioloid_moveit_gp4)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="$(arg use_gui)"/>
    <rosparam if="$(arg sim)" param="source_list">["/sim_interface/joint_states"]</rosparam>
    <rosparam unless="$(arg sim)" param="source_list">["/hw_interface/joint_states"]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find bioloid_moveit_gp4)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find bioloid_moveit_gp4)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find bioloid_moveit_gp4)/launch/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find bioloid_moveit_gp4)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>
</launch>
